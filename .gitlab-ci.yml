stages:
  - backup
  - build
  - deploy
  - rollback

dev_backup_job:
  stage: backup
  script:
    - docker image tag devrubick2follow-api:latest devrubick2follow-api:prev || true
  tags:
    - devapp
  only :
    - dev

dev_build_job:
  stage: build
  script:

    - cp .env.example .env
    - sed -i -e "s;^\s*SECRET_KEY=.*;SECRET_KEY=$SECRET_KEY;g" .env
    - sed -i -e "s;^\s*DB_CONNECTION=.*;DB_CONNECTION=pgsql;g" .env
    - sed -i -e "s;^\s*DB_DATABASE=.*;DB_DATABASE=devrubick2follow;g" .env
    - sed -i -e "s;^\s*DB_USERNAME=.*;DB_USERNAME=devrubick2follow;g" .env
    - sed -i -e "s;^\s*DB_PASSWORD=.*;DB_PASSWORD=$DEV_DB_PASS;g" .env
    - sed -i -e "s;^\s*DB_HOST=.*;DB_HOST=10.0.0.28;g" .env
    - sed -i -e "s;^\s*DB_PORT=.*;DB_PORT=5432;g" .env
    - sed -i -e "s;^\s*DEBUG=.*;DEBUG=1;g" .env
    - echo "APP_URL=https://devrubick2follow.zippyttech.com" >> .env
    - echo "#WASTE_API=https://devrubick2follow.zippyttech.com/api/" >> .env
    - echo "USERS_API=https://devrubick2user.zippyttech.com" >> .env
    - sed -i -e "s;^\s*DB_DATABASE_USER=.*;DB_DATABASE_USER=devrubick2user;g" .env
    - sed -i -e "s;^\s*DB_USERNAME_READ=.*;DB_USERNAME_READ=devrubick2user;g" .env
    - sed -i -e "s;^\s*DB_PASSWORD_READ=.*;DB_PASSWORD_READ=zippy123;g" .env
    - docker build -t devrubick2follow-api .
  when: on_success
  tags:
    - devapp
  only :
    - dev

dev_deploy_job:
  stage: deploy
  script:
    - docker stop devrubick2follow-api || true
    - docker rm devrubick2follow-api || true
    - docker run -d --restart always --name devrubick2follow-api --network devapp -p 9028:80 -v devrubick2follow-api-images:/var/www/html/storage/app/public/images -v devrubick2follow-api-images:/var/www/html/public/images -v devrubick2follow-api-images:/var/www/html/public/logos devrubick2follow-api
    - docker exec devrubick2follow-api php artisan migrate
    - docker exec devrubick2follow-api php artisan storage:link
  when: on_success
  tags:
    - devapp
  only:
    - dev

dev_rollback_job:
  stage: rollback
  script:
    - docker stop devrubick2follow-api || true
    - docker rm devrubick2follow-api || true
    - docker image tag devrubick2follow-api:prev devrubick2follow-api:latest || true
    - docker run -d --restart always --name devrubick2follow-api --network devapp -p 9028:80 -v devrubick2follow-api-images:/var/www/html/storage/app/public/images -v devrubick2follow-api-images:/var/www/html/public/images -v devrubick2follow-api-images:/var/www/html/public/logos devrubick2follow-api
  when: manual
  tags:
    - devapp
  only:
    - dev

qa_backup_job:
  stage: backup
  script:
    - docker image tag qarubick2follow-api:latest qarubick2follow-api:prev || true
  tags:
    - ifx1
  only :
    - qa

qa_build_job:
  stage: build
  script:
    - cp .env.example .env
    - sed -i -e "s;^\s*SECRET_KEY=.*;SECRET_KEY=$SECRET_KEY;g" .env
    - sed -i -e "s;^\s*DB_CONNECTION=.*;DB_CONNECTION=pgsql;g" .env
    - sed -i -e "s;^\s*DB_DATABASE=.*;DB_DATABASE=qarubick2follow;g" .env
    - sed -i -e "s;^\s*DB_USERNAME=.*;DB_USERNAME=qarubick2follow;g" .env
    - sed -i -e "s;^\s*DB_PASSWORD=.*;DB_PASSWORD=$QA_DB_PASS;g" .env
    - sed -i -e "s;^\s*DB_HOST=.*;DB_HOST=10.0.0.12;g" .env
    - sed -i -e "s;^\s*DB_PORT=.*;DB_PORT=5432;g" .env
    - sed -i -e "s;^\s*DEBUG=.*;DEBUG=1;g" .env
    - sed -i -e "s;^\s*APP_URL=.*;APP_URL=https://qarubick2follow.zippyttech.com;g" .env
    - echo "URL_API_ACCOUNT=https://qarubick2follow.zippyttech.com" >> .env
    - echo "URL_API_CLIENT=https://qarubick2follow.zippyttech.com" >> .env
    - echo "URL_API_NOTIFICATION=https://qarubick2notifications.zippyttech.com" >> .env
    - echo "URL_API_WALLET=https://qarubick2wallet.zippyttech.com" >> .env
    - echo "URL_API_USER=https://qarubick2user.zippyttech.com" >> .env
    - echo "#WASTE_API=https://qarubick2waste.zippyttech.com/api/" >> .env
    - echo "USERS_API=https://qarubick2user.zippyttech.com" >> .env
    - sed -i -e "s;^\s*DB_DATABASE_USER=.*;DB_DATABASE_USER=qarubick2user;g" .env
    - sed -i -e "s;^\s*DB_USERNAME_READ=.*;DB_USERNAME_READ=qarubick2user;g" .env
    - sed -i -e "s;^\s*DB_PASSWORD_READ=.*;DB_PASSWORD_READ=k6R+1I8k0uc=;g" .env
    - docker build -t qarubick2follow-api .
  when: on_success
  tags:
    - ifx1
  only :
    - qa

qa_deploy_job:
  stage: deploy
  script:
    - docker stop qarubick2follow-api || true
    - docker rm qarubick2follow-api || true
    - docker run -d --restart always --name qarubick2follow-api --network qaapp -p 9099:80 -v qarubick2follow-api-images:/var/www/html/storage/app/public/images -v qarubick2follow-api-images:/var/www/html/public/images -v qarubick2follow-api-images:/var/www/html/public/logos qarubick2follow-api
    - docker exec qarubick2follow-api php artisan migrate
    - docker exec qarubick2follow-api php artisan storage:link
  when: on_success
  tags:
    - ifx1
  only:
    - qa

qa_rollback_job:
  stage: rollback
  script:
    - docker stop qarubick2follow-api || true
    - docker rm qarubick2follow-api || true
    - docker image tag qarubick2follow-api:prev qarubick2follow-api:latest || true
    - docker run -d --restart always --name qarubick2follow-api --network qaapp -p 9099:80 -v qarubick2follow-api-images:/var/www/html/storage/app/public/images -v qarubick2follow-api-images:/var/www/html/public/images -v qarubick2follow-api-images:/var/www/html/public/logos qarubick2follow-api
  when: manual
  tags:
    - ifx1
  only:
    - qa

prod_backup_job:
  stage: backup
  script:
    - docker image tag rubick2follow-api:latest rubick2follow-api:prev || true
  tags:
    - prodapp
  only :
    - tags

prod_build_job:
  stage: build
  script:
    - cp .env.example .env
    - sed -i -e "s;^\s*SECRET_KEY=.*;SECRET_KEY=$SECRET_KEY;g" .env
    - sed -i -e "s;^\s*DB_CONNECTION=.*;DB_CONNECTION=pgsql;g" .env
    - sed -i -e "s;^\s*DB_DATABASE=.*;DB_DATABASE=rubick2follow;g" .env
    - sed -i -e "s;^\s*DB_USERNAME=.*;DB_USERNAME=rubick2follow;g" .env
    - sed -i -e "s;^\s*DB_PASSWORD=.*;DB_PASSWORD=$PROD_DB_PASS;g" .env
    - sed -i -e "s;^\s*DB_HOST=.*;DB_HOST=10.0.0.31;g" .env
    - sed -i -e "s;^\s*DB_PORT=.*;DB_PORT=5432;g" .env
    - sed -i -e "s;^\s*DEBUG=.*;DEBUG=0;g" .env
    - sed -i -e "s;^\s*APP_URL=.*;APP_URL=reservas.berygo.com;g" .env
    - echo "#API_URL:" >> .env
    - echo "URL_API_ACCOUNT=https://rubick2account.zippyttech.com" >> .env
    - echo "URL_API_CLIENT=https://rubick2client.zippyttech.com" >> .env
    - echo "URL_API_NOTIFICATION=https://rubick2notifications.zippyttech.com" >> .env
    - echo "URL_API_WALLET=https://rubick2wallet.zippyttech.com" >> .env
    - echo "URL_API_USER=https://rubick2user.zippyttech.com" >> .env
    - echo "WASTE_API=https://rubick2waste.zippyttech.com/api/" >> .env
    - docker build -t rubick2follow-api .
  when: on_success
  tags:
    - prodapp
  only :
    - tags

prod_deploy_job:
  stage: deploy
  script:
    - docker stop rubick2follow-api || true
    - docker rm rubick2follow-api || true
    - docker run -d --restart always --name rubick2follow-api --network app -p 9021:80 -v rubick2follow-api-images:/var/www/html/storage/app/public/images -v rubick2follow-api-images:/var/www/html/public/images -v rubick2follow-api-images:/var/www/html/public/logos rubick2follow-api
    - docker exec rubick2follow-api php artisan migrate
    - docker exec rubick2follow-api php artisan storage:link
  when: on_success
  tags:
    - prodapp
  only:
    - tags

prod_rollback_job:
  stage: rollback
  script:
    - docker stop rubick2follow-api || true
    - docker rm rubick2follow-api || true
    - docker image tag rubick2follow-api:prev rubick2follow-api:latest || true
    - docker run -d --restart always --name rubick2follow-api --network app -p 9021:80 -v rubick2follow-api-images:/var/www/html/storage/app/public/images -v rubick2follow-api-images:/var/www/html/public/images -v rubick2follow-api-images:/var/www/html/public/logos rubick2follow-api
  when: manual
  tags:
    - prodapp
  only:
    - tags

berygo_build_job:
  stage:  build
  script:
    - cp .env.example .env
    - sed -i -e "s;^\s*SECRET_KEY=.*;SECRET_KEY=$SECRET_KEY;g" .env
    - sed -i -e "s;^\s*DB_CONNECTION=.*;DB_CONNECTION=pgsql;g" .env
    - sed -i -e "s;^\s*DB_DATABASE=.*;DB_DATABASE=followrubick2berygo;g" .env
    - sed -i -e "s;^\s*DB_USERNAME=.*;DB_USERNAME=followrubick2berygo;g" .env
    - sed -i -e "s;^\s*DB_PASSWORD=.*;DB_PASSWORD=$FOLLOW_BERYGO_DB_PASS;g" .env
    - sed -i -e "s;^\s*DB_HOST=.*;DB_HOST=10.0.0.31;g" .env
    - sed -i -e "s;^\s*DB_PORT=.*;DB_PORT=5432;g" .env
    - sed -i -e "s;^\s*DEBUG=.*;DEBUG=0;g" .env
    - sed -i -e "s;^\s*APP_URL=.*;APP_URL=https://follow.berygo.com;g" .env
    - echo "APP_URL=https://follow.berygo.com" >> .env
    - echo "URL_API_ACCOUNT=https://account.berygo.com" >> .env
    - echo "URL_API_CLIENT=https://client.berygo.com" >> .env
    - echo "URL_API_NOTIFICATION=https://notifications.berygo.com" >> .env
    - echo "URL_API_WALLET=https://wallet.berygo.com" >> .env
    - echo "URL_API_USER=https://user.berygo.com" >> .env
    - echo "WASTE_API=https://waste.berygo.com/api/" >> .env
    - docker build -t follow-api .
  when: on_success
  tags:
    - berygo
  only:
    - berygo

berygo_deploy_job:
  stage: deploy
  script:
    - docker stop follow-api || true
    - docker rm follow-api || true
    - docker run -d --restart always --name follow-api --memory="512m" -v follow-api-images:/var/www/html/public/images -v follow-api-images:/var/www/html/public/logos --network app -p 9027:80 follow-api
    - docker exec follow-api php artisan migrate
  when: on_success
  tags:
    - berygo
  only:
    - berygo

cdg_build_job:
  stage:  build
  script:
    - cp .env.example .env
    - sed -i -e "s;^\s*SECRET_KEY=.*;SECRET_KEY=$SECRET_KEY;g" .env
    - sed -i -e "s;^\s*DB_CONNECTION=.*;DB_CONNECTION=pgsql;g" .env
    - sed -i -e "s;^\s*DB_DATABASE=.*;DB_DATABASE=followrubick2cdg;g" .env
    - sed -i -e "s;^\s*DB_USERNAME=.*;DB_USERNAME=followrubick2cdg;g" .env
    - sed -i -e "s;^\s*DB_PASSWORD=.*;DB_PASSWORD=$FOLLOW_BERYGO_DB_PASS;g" .env
    - sed -i -e "s;^\s*DB_HOST=.*;DB_HOST=10.0.0.31;g" .env
    - sed -i -e "s;^\s*DB_PORT=.*;DB_PORT=5432;g" .env
    - sed -i -e "s;^\s*DEBUG=.*;DEBUG=0;g" .env
    - sed -i -e "s;^\s*APP_URL=.*;APP_URL=follow-cdg.zippyttech.com;g" .env
    - echo "APP_URL=https://client-cdg.com" >> .env
    - echo "URL_API_ACCOUNT=https://follow-cdg.zippyttech.com" >> .env
    - echo "URL_API_CLIENT=https://follow-cdg.zippyttech.com" >> .env
    - echo "URL_API_NOTIFICATION=https://notifications-cdg.zippyttech.com" >> .env
    - echo "URL_API_WALLET=https://wallet-cdg.zippyttech.com" >> .env
    - echo "URL_API_USER=https://user-cdg.zippyttech.com" >> .env
    - echo "WASTE_API=https://waste-cdg.zippyttech.com/api/" >> .env
    - docker build -t follow-api .
  when: on_success
  tags:
    - cdg
  only:
    - cdg

cdg_deploy_job:
  stage: deploy
  script:
    - docker stop follow-api || true
    - docker rm follow-api || true
    - docker run -d --restart always --name account-api --memory="512m" -v follow-api-images:/var/www/html/storage/app/public/images -v follow-api-images:/var/www/html/public/images -v follow-api-images:/var/www/html/public/logos --network app -p 9024:80 follow-api
    - docker exec follow-api php artisan migrate
    - docker exec follow-api php artisan storage:link
  when: on_success
  tags:
    - cdg
  only:
    - cdg

aguaseo_build_job:
  stage:  build
  script:
    - cp .env.example .env
    - sed -i -e "s;^\s*SECRET_KEY=.*;SECRET_KEY=$SECRET_KEY;g" .env
    - sed -i -e "s;^\s*DB_CONNECTION=.*;DB_CONNECTION=pgsql;g" .env
    - sed -i -e "s;^\s*DB_DATABASE=.*;DB_DATABASE=rubick2aguaseo-follow;g" .env
    - sed -i -e "s;^\s*DB_USERNAME=.*;DB_USERNAME=rubick2aguaseo-follow;g" .env
    - sed -i -e "s;^\s*DB_PASSWORD=.*;DB_PASSWORD=$AGUASEO_FOLLOW_DB_PASS;g" .env
    - sed -i -e "s;^\s*DB_HOST=.*;DB_HOST=10.0.0.31;g" .env
    - sed -i -e "s;^\s*DB_PORT=.*;DB_PORT=5432;g" .env
    - sed -i -e "s;^\s*DEBUG=.*;DEBUG=0;g" .env
    - sed -i -e "s;^\s*APP_URL=.*;APP_URL=follow.rubick.aguaseo.com;g" .env
    - echo "APP_URL=https://follow-aguaseo.zippyttech.com" >> .env
    - echo "URL_API_ACCOUNT=https://account-aguaseo.zippyttech.com" >> .env
    - echo "URL_API_CLIENT=https://client-aguaseo.zippyttech.com" >> .env
    - echo "URL_API_NOTIFICATION=https://notifications-aguaseo.zippyttech.com" >> .env
    - echo "URL_API_WALLET=https://wallet-aguaseo.zippyttech.com" >> .env
    - echo "URL_API_USER=https://user-aguaseo.zippyttech.com" >> .env
    - echo "WASTE_API=https://waste-aguaseo.zippyttech.com/api/" >> .env
    - docker build -t aguaseo-follow-api .
  when: on_success
  tags:
    - aguaseo
  only:
    - aguaseo

aguaseo_deploy_job:
  stage: deploy
  script:
    - docker stop aguaseo-follow-api || true
    - docker rm aguaseo-follow-api || true
    - docker run -d --restart always --name aguaseo-follow-api --memory="512m" -v aguaseo-follow-api-images:/var/www/html/storage/app/public/images -v aguaseo-follow-api-images:/var/www/html/public/images -v aguaseo-client-api-images:/var/www/html/public/logos --network app -p 9026:80 aguaseo-follow-api
    - docker exec aguaseo-follow-api php artisan migrate
    - docker exec aguaseo-follow-api php artisan storage:link
  when: on_success
  tags:
    - aguaseo
  only:
    - aguaseo

bukewallet_build_job:
  stage:  build
  script:
    - cp .env.example .env
    - sed -i -e "s;^\s*SECRET_KEY=.*;SECRET_KEY=$SECRET_KEY;g" .env
    - sed -i -e "s;^\s*DB_CONNECTION=.*;DB_CONNECTION=pgsql;g" .env
    - sed -i -e "s;^\s*DB_DATABASE=.*;DB_DATABASE=followrubick2bukewallet;g" .env
    - sed -i -e "s;^\s*DB_USERNAME=.*;DB_USERNAME=followrubick2bukewallet;g" .env
    - sed -i -e "s;^\s*DB_PASSWORD=.*;DB_PASSWORD=$BUKEWALLET_DB_PASS;g" .env
    - sed -i -e "s;^\s*DB_HOST=.*;DB_HOST=10.0.0.31;g" .env
    - sed -i -e "s;^\s*DB_PORT=.*;DB_PORT=5432;g" .env
    - sed -i -e "s;^\s*DEBUG=.*;DEBUG=0;g" .env
    - sed -i -e "s;^\s*APP_URL=.*;APP_URL=follow.bukewallet.com;g" .env
    - echo "#API_URL:" >> .env
    - echo "APP_URL=https://follow.bukewallet.com" >> .env
    - echo "URL_API_ACCOUNT=https://account.bukewallet.com" >> .env
    - echo "URL_API_CLIENT=https://client.bukewallet.com" >> .env
    - echo "URL_API_NOTIFICATION=https://notifications.bukewallet.com" >> .env
    - echo "URL_API_WALLET=https://wallet.bukewallet.com" >> .env
    - echo "URL_API_USER=https://user.bukewallet.com" >> .env
    - docker build -t bukewallet-follow-api .
  when: on_success
  tags:
    - bukewallet
  only:
    - bukewallet

bukewallet_deploy_job:
  stage: deploy
  script:
    - docker stop bukewallet-follow-api || true
    - docker rm bukewallet-follow-api || true
    - docker run -d --restart always --name bukewallet-follow-api --memory="512m" -v bukewallet-follow-api-images:/var/www/html/storage/app/public/images -v bukewallet-follow-api-images:/var/www/html/public/images -v bukewallet-follow-api-images:/var/www/html/public/logos --network app -p 9026:80 bukewallet-follow-api
    - docker exec bukewallet-follow-api php artisan migrate
    - docker exec bukewallet-follow-api php artisan storage:link
  when: on_success
  tags:
    - bukewallet
  only:
    - bukewallet
